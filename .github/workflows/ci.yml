name: Continuous Integration

on: push
env: 
  environment: dev

jobs:
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Set Node.js 14.x
        uses: actions/setup-node@v3.3.0
        with:
          node-version: 14.x

      - name: Install dependencies
        run: |
          cd js 
          npm ci

      - name: Test
        run: |
          cd js 
          npm run lint
      
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Set Node.js 14.x
        uses: actions/setup-node@v3.3.0
        with:
          node-version: 14.x

      - name: Install dependecies
        run: |
          cd js 
          npm ci

      - name: Lint
        run: |
          cd js 
          npm run lint
  
  practice: 
    name: practice
    runs-on: ubuntu-latest
    # このジョブを実行する前に成功していなければいけないジョブを記述
    needs: [unit-test, lint]
    # エラーが発生してジョブが失敗してもワークフローは失敗しない
    continue-on-error: true
    steps: 
      # docker hubのイメージとアクションを実行
      - uses: docker://alpine:3.11
        with:
          entrypoint: /bin/echo
          args: Hello, World!

      # シェルをpythonに変更して実行
      - run: |
          import sys
          print(sys.version)
        shell: python
  
  val-output:
    runs-on: ubuntu-latest
    outputs:
      random: ${{ steps.generate-random.outputs.random }}
      configJson: ${{ steps.generate-random.outputs.configJson }}
    steps:
      - id: generate-random                    
        run: |
          echo "::set-output name=random::$(openssl rand -base64 12)"

          for e in $(cat ./config.json)
          do
            if [ $environment == $e.env ]; then
              echo "::set-output name=configJson::$e"
            fi
          done
  
  val-serve:
    runs-on: ubuntu-latest
    needs: val-output
    env: 
      arn: ${{ fromJson(needs.val-output.outputs.configJson).arn }}
    steps:
      - run: |
          echo "${{ needs.val-output.outputs.random }}"
          echo "${arn}"
 



    

      

